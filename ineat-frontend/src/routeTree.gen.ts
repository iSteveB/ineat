/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteRouteImport } from './routes/app/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as AuthRegisterRouteImport } from './routes/_auth/register'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/_auth/forgot-password'
import { Route as AuthCallbackRouteImport } from './routes/_auth/callback'
import { Route as AppReceiptsRouteRouteImport } from './routes/app/receipts/route'
import { Route as AppSubscriptionIndexRouteImport } from './routes/app/subscription/index'
import { Route as AppSettingsIndexRouteImport } from './routes/app/settings/index'
import { Route as AppRecipesIndexRouteImport } from './routes/app/recipes/index'
import { Route as AppProfileIndexRouteImport } from './routes/app/profile/index'
import { Route as AppNotificationsIndexRouteImport } from './routes/app/notifications/index'
import { Route as AppInventoryIndexRouteImport } from './routes/app/inventory/index'
import { Route as AppBudgetIndexRouteImport } from './routes/app/budget/index'
import { Route as AppRecipesSuggestionsRouteImport } from './routes/app/recipes/suggestions'
import { Route as AppRecipesRecipeIdRouteImport } from './routes/app/recipes/$recipeId'
import { Route as AppReceiptsHistoryRouteImport } from './routes/app/receipts/history'
import { Route as AppInventoryProductIdRouteImport } from './routes/app/inventory/$productId'
import { Route as AppSettingsSecurityIndexRouteImport } from './routes/app/settings/security/index'
import { Route as AppSettingsPersonalInfoIndexRouteImport } from './routes/app/settings/personal-info/index'
import { Route as AppSettingsDietRestrictionsIndexRouteImport } from './routes/app/settings/diet-restrictions/index'
import { Route as AppInventoryAddIndexRouteImport } from './routes/app/inventory/add/index'
import { Route as AppReceiptsReceiptIdResultsRouteImport } from './routes/app/receipts/$receiptId.results'
import { Route as AppInventoryAddSearchRouteImport } from './routes/app/inventory/add/search'
import { Route as AppInventoryAddScanRouteImport } from './routes/app/inventory/add/scan'
import { Route as AppInventoryAddReceiptRouteImport } from './routes/app/inventory/add/receipt'
import { Route as AppInventoryAddManualRouteImport } from './routes/app/inventory/add/manual'
import { Route as AppInventoryAddDriveRouteImport } from './routes/app/inventory/add/drive'

const AppRouteRoute = AppRouteRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AppReceiptsRouteRoute = AppReceiptsRouteRouteImport.update({
  id: '/receipts',
  path: '/receipts',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppSubscriptionIndexRoute = AppSubscriptionIndexRouteImport.update({
  id: '/subscription/',
  path: '/subscription/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppSettingsIndexRoute = AppSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppRecipesIndexRoute = AppRecipesIndexRouteImport.update({
  id: '/recipes/',
  path: '/recipes/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppProfileIndexRoute = AppProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppNotificationsIndexRoute = AppNotificationsIndexRouteImport.update({
  id: '/notifications/',
  path: '/notifications/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppInventoryIndexRoute = AppInventoryIndexRouteImport.update({
  id: '/inventory/',
  path: '/inventory/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppBudgetIndexRoute = AppBudgetIndexRouteImport.update({
  id: '/budget/',
  path: '/budget/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppRecipesSuggestionsRoute = AppRecipesSuggestionsRouteImport.update({
  id: '/recipes/suggestions',
  path: '/recipes/suggestions',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppRecipesRecipeIdRoute = AppRecipesRecipeIdRouteImport.update({
  id: '/recipes/$recipeId',
  path: '/recipes/$recipeId',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppReceiptsHistoryRoute = AppReceiptsHistoryRouteImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => AppReceiptsRouteRoute,
} as any)
const AppInventoryProductIdRoute = AppInventoryProductIdRouteImport.update({
  id: '/inventory/$productId',
  path: '/inventory/$productId',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppSettingsSecurityIndexRoute =
  AppSettingsSecurityIndexRouteImport.update({
    id: '/settings/security/',
    path: '/settings/security/',
    getParentRoute: () => AppRouteRoute,
  } as any)
const AppSettingsPersonalInfoIndexRoute =
  AppSettingsPersonalInfoIndexRouteImport.update({
    id: '/settings/personal-info/',
    path: '/settings/personal-info/',
    getParentRoute: () => AppRouteRoute,
  } as any)
const AppSettingsDietRestrictionsIndexRoute =
  AppSettingsDietRestrictionsIndexRouteImport.update({
    id: '/settings/diet-restrictions/',
    path: '/settings/diet-restrictions/',
    getParentRoute: () => AppRouteRoute,
  } as any)
const AppInventoryAddIndexRoute = AppInventoryAddIndexRouteImport.update({
  id: '/inventory/add/',
  path: '/inventory/add/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppReceiptsReceiptIdResultsRoute =
  AppReceiptsReceiptIdResultsRouteImport.update({
    id: '/$receiptId/results',
    path: '/$receiptId/results',
    getParentRoute: () => AppReceiptsRouteRoute,
  } as any)
const AppInventoryAddSearchRoute = AppInventoryAddSearchRouteImport.update({
  id: '/inventory/add/search',
  path: '/inventory/add/search',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppInventoryAddScanRoute = AppInventoryAddScanRouteImport.update({
  id: '/inventory/add/scan',
  path: '/inventory/add/scan',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppInventoryAddReceiptRoute = AppInventoryAddReceiptRouteImport.update({
  id: '/inventory/add/receipt',
  path: '/inventory/add/receipt',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppInventoryAddManualRoute = AppInventoryAddManualRouteImport.update({
  id: '/inventory/add/manual',
  path: '/inventory/add/manual',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppInventoryAddDriveRoute = AppInventoryAddDriveRouteImport.update({
  id: '/inventory/add/drive',
  path: '/inventory/add/drive',
  getParentRoute: () => AppRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/app/receipts': typeof AppReceiptsRouteRouteWithChildren
  '/callback': typeof AuthCallbackRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/app/': typeof AppIndexRoute
  '/app/inventory/$productId': typeof AppInventoryProductIdRoute
  '/app/receipts/history': typeof AppReceiptsHistoryRoute
  '/app/recipes/$recipeId': typeof AppRecipesRecipeIdRoute
  '/app/recipes/suggestions': typeof AppRecipesSuggestionsRoute
  '/app/budget': typeof AppBudgetIndexRoute
  '/app/inventory': typeof AppInventoryIndexRoute
  '/app/notifications': typeof AppNotificationsIndexRoute
  '/app/profile': typeof AppProfileIndexRoute
  '/app/recipes': typeof AppRecipesIndexRoute
  '/app/settings': typeof AppSettingsIndexRoute
  '/app/subscription': typeof AppSubscriptionIndexRoute
  '/app/inventory/add/drive': typeof AppInventoryAddDriveRoute
  '/app/inventory/add/manual': typeof AppInventoryAddManualRoute
  '/app/inventory/add/receipt': typeof AppInventoryAddReceiptRoute
  '/app/inventory/add/scan': typeof AppInventoryAddScanRoute
  '/app/inventory/add/search': typeof AppInventoryAddSearchRoute
  '/app/receipts/$receiptId/results': typeof AppReceiptsReceiptIdResultsRoute
  '/app/inventory/add': typeof AppInventoryAddIndexRoute
  '/app/settings/diet-restrictions': typeof AppSettingsDietRestrictionsIndexRoute
  '/app/settings/personal-info': typeof AppSettingsPersonalInfoIndexRoute
  '/app/settings/security': typeof AppSettingsSecurityIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app/receipts': typeof AppReceiptsRouteRouteWithChildren
  '/callback': typeof AuthCallbackRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/app': typeof AppIndexRoute
  '/app/inventory/$productId': typeof AppInventoryProductIdRoute
  '/app/receipts/history': typeof AppReceiptsHistoryRoute
  '/app/recipes/$recipeId': typeof AppRecipesRecipeIdRoute
  '/app/recipes/suggestions': typeof AppRecipesSuggestionsRoute
  '/app/budget': typeof AppBudgetIndexRoute
  '/app/inventory': typeof AppInventoryIndexRoute
  '/app/notifications': typeof AppNotificationsIndexRoute
  '/app/profile': typeof AppProfileIndexRoute
  '/app/recipes': typeof AppRecipesIndexRoute
  '/app/settings': typeof AppSettingsIndexRoute
  '/app/subscription': typeof AppSubscriptionIndexRoute
  '/app/inventory/add/drive': typeof AppInventoryAddDriveRoute
  '/app/inventory/add/manual': typeof AppInventoryAddManualRoute
  '/app/inventory/add/receipt': typeof AppInventoryAddReceiptRoute
  '/app/inventory/add/scan': typeof AppInventoryAddScanRoute
  '/app/inventory/add/search': typeof AppInventoryAddSearchRoute
  '/app/receipts/$receiptId/results': typeof AppReceiptsReceiptIdResultsRoute
  '/app/inventory/add': typeof AppInventoryAddIndexRoute
  '/app/settings/diet-restrictions': typeof AppSettingsDietRestrictionsIndexRoute
  '/app/settings/personal-info': typeof AppSettingsPersonalInfoIndexRoute
  '/app/settings/security': typeof AppSettingsSecurityIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/app': typeof AppRouteRouteWithChildren
  '/app/receipts': typeof AppReceiptsRouteRouteWithChildren
  '/_auth/callback': typeof AuthCallbackRoute
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/app/': typeof AppIndexRoute
  '/app/inventory/$productId': typeof AppInventoryProductIdRoute
  '/app/receipts/history': typeof AppReceiptsHistoryRoute
  '/app/recipes/$recipeId': typeof AppRecipesRecipeIdRoute
  '/app/recipes/suggestions': typeof AppRecipesSuggestionsRoute
  '/app/budget/': typeof AppBudgetIndexRoute
  '/app/inventory/': typeof AppInventoryIndexRoute
  '/app/notifications/': typeof AppNotificationsIndexRoute
  '/app/profile/': typeof AppProfileIndexRoute
  '/app/recipes/': typeof AppRecipesIndexRoute
  '/app/settings/': typeof AppSettingsIndexRoute
  '/app/subscription/': typeof AppSubscriptionIndexRoute
  '/app/inventory/add/drive': typeof AppInventoryAddDriveRoute
  '/app/inventory/add/manual': typeof AppInventoryAddManualRoute
  '/app/inventory/add/receipt': typeof AppInventoryAddReceiptRoute
  '/app/inventory/add/scan': typeof AppInventoryAddScanRoute
  '/app/inventory/add/search': typeof AppInventoryAddSearchRoute
  '/app/receipts/$receiptId/results': typeof AppReceiptsReceiptIdResultsRoute
  '/app/inventory/add/': typeof AppInventoryAddIndexRoute
  '/app/settings/diet-restrictions/': typeof AppSettingsDietRestrictionsIndexRoute
  '/app/settings/personal-info/': typeof AppSettingsPersonalInfoIndexRoute
  '/app/settings/security/': typeof AppSettingsSecurityIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/app/receipts'
    | '/callback'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/app/'
    | '/app/inventory/$productId'
    | '/app/receipts/history'
    | '/app/recipes/$recipeId'
    | '/app/recipes/suggestions'
    | '/app/budget'
    | '/app/inventory'
    | '/app/notifications'
    | '/app/profile'
    | '/app/recipes'
    | '/app/settings'
    | '/app/subscription'
    | '/app/inventory/add/drive'
    | '/app/inventory/add/manual'
    | '/app/inventory/add/receipt'
    | '/app/inventory/add/scan'
    | '/app/inventory/add/search'
    | '/app/receipts/$receiptId/results'
    | '/app/inventory/add'
    | '/app/settings/diet-restrictions'
    | '/app/settings/personal-info'
    | '/app/settings/security'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app/receipts'
    | '/callback'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/app'
    | '/app/inventory/$productId'
    | '/app/receipts/history'
    | '/app/recipes/$recipeId'
    | '/app/recipes/suggestions'
    | '/app/budget'
    | '/app/inventory'
    | '/app/notifications'
    | '/app/profile'
    | '/app/recipes'
    | '/app/settings'
    | '/app/subscription'
    | '/app/inventory/add/drive'
    | '/app/inventory/add/manual'
    | '/app/inventory/add/receipt'
    | '/app/inventory/add/scan'
    | '/app/inventory/add/search'
    | '/app/receipts/$receiptId/results'
    | '/app/inventory/add'
    | '/app/settings/diet-restrictions'
    | '/app/settings/personal-info'
    | '/app/settings/security'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/app'
    | '/app/receipts'
    | '/_auth/callback'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/register'
    | '/app/'
    | '/app/inventory/$productId'
    | '/app/receipts/history'
    | '/app/recipes/$recipeId'
    | '/app/recipes/suggestions'
    | '/app/budget/'
    | '/app/inventory/'
    | '/app/notifications/'
    | '/app/profile/'
    | '/app/recipes/'
    | '/app/settings/'
    | '/app/subscription/'
    | '/app/inventory/add/drive'
    | '/app/inventory/add/manual'
    | '/app/inventory/add/receipt'
    | '/app/inventory/add/scan'
    | '/app/inventory/add/search'
    | '/app/receipts/$receiptId/results'
    | '/app/inventory/add/'
    | '/app/settings/diet-restrictions/'
    | '/app/settings/personal-info/'
    | '/app/settings/security/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  AppRouteRoute: typeof AppRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/callback': {
      id: '/_auth/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/app/receipts': {
      id: '/app/receipts'
      path: '/receipts'
      fullPath: '/app/receipts'
      preLoaderRoute: typeof AppReceiptsRouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/subscription/': {
      id: '/app/subscription/'
      path: '/subscription'
      fullPath: '/app/subscription'
      preLoaderRoute: typeof AppSubscriptionIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/settings/': {
      id: '/app/settings/'
      path: '/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AppSettingsIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/recipes/': {
      id: '/app/recipes/'
      path: '/recipes'
      fullPath: '/app/recipes'
      preLoaderRoute: typeof AppRecipesIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/profile/': {
      id: '/app/profile/'
      path: '/profile'
      fullPath: '/app/profile'
      preLoaderRoute: typeof AppProfileIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/notifications/': {
      id: '/app/notifications/'
      path: '/notifications'
      fullPath: '/app/notifications'
      preLoaderRoute: typeof AppNotificationsIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/inventory/': {
      id: '/app/inventory/'
      path: '/inventory'
      fullPath: '/app/inventory'
      preLoaderRoute: typeof AppInventoryIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/budget/': {
      id: '/app/budget/'
      path: '/budget'
      fullPath: '/app/budget'
      preLoaderRoute: typeof AppBudgetIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/recipes/suggestions': {
      id: '/app/recipes/suggestions'
      path: '/recipes/suggestions'
      fullPath: '/app/recipes/suggestions'
      preLoaderRoute: typeof AppRecipesSuggestionsRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/recipes/$recipeId': {
      id: '/app/recipes/$recipeId'
      path: '/recipes/$recipeId'
      fullPath: '/app/recipes/$recipeId'
      preLoaderRoute: typeof AppRecipesRecipeIdRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/receipts/history': {
      id: '/app/receipts/history'
      path: '/history'
      fullPath: '/app/receipts/history'
      preLoaderRoute: typeof AppReceiptsHistoryRouteImport
      parentRoute: typeof AppReceiptsRouteRoute
    }
    '/app/inventory/$productId': {
      id: '/app/inventory/$productId'
      path: '/inventory/$productId'
      fullPath: '/app/inventory/$productId'
      preLoaderRoute: typeof AppInventoryProductIdRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/settings/security/': {
      id: '/app/settings/security/'
      path: '/settings/security'
      fullPath: '/app/settings/security'
      preLoaderRoute: typeof AppSettingsSecurityIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/settings/personal-info/': {
      id: '/app/settings/personal-info/'
      path: '/settings/personal-info'
      fullPath: '/app/settings/personal-info'
      preLoaderRoute: typeof AppSettingsPersonalInfoIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/settings/diet-restrictions/': {
      id: '/app/settings/diet-restrictions/'
      path: '/settings/diet-restrictions'
      fullPath: '/app/settings/diet-restrictions'
      preLoaderRoute: typeof AppSettingsDietRestrictionsIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/inventory/add/': {
      id: '/app/inventory/add/'
      path: '/inventory/add'
      fullPath: '/app/inventory/add'
      preLoaderRoute: typeof AppInventoryAddIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/receipts/$receiptId/results': {
      id: '/app/receipts/$receiptId/results'
      path: '/$receiptId/results'
      fullPath: '/app/receipts/$receiptId/results'
      preLoaderRoute: typeof AppReceiptsReceiptIdResultsRouteImport
      parentRoute: typeof AppReceiptsRouteRoute
    }
    '/app/inventory/add/search': {
      id: '/app/inventory/add/search'
      path: '/inventory/add/search'
      fullPath: '/app/inventory/add/search'
      preLoaderRoute: typeof AppInventoryAddSearchRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/inventory/add/scan': {
      id: '/app/inventory/add/scan'
      path: '/inventory/add/scan'
      fullPath: '/app/inventory/add/scan'
      preLoaderRoute: typeof AppInventoryAddScanRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/inventory/add/receipt': {
      id: '/app/inventory/add/receipt'
      path: '/inventory/add/receipt'
      fullPath: '/app/inventory/add/receipt'
      preLoaderRoute: typeof AppInventoryAddReceiptRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/inventory/add/manual': {
      id: '/app/inventory/add/manual'
      path: '/inventory/add/manual'
      fullPath: '/app/inventory/add/manual'
      preLoaderRoute: typeof AppInventoryAddManualRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/inventory/add/drive': {
      id: '/app/inventory/add/drive'
      path: '/inventory/add/drive'
      fullPath: '/app/inventory/add/drive'
      preLoaderRoute: typeof AppInventoryAddDriveRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthCallbackRoute: typeof AuthCallbackRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthCallbackRoute: AuthCallbackRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface AppReceiptsRouteRouteChildren {
  AppReceiptsHistoryRoute: typeof AppReceiptsHistoryRoute
  AppReceiptsReceiptIdResultsRoute: typeof AppReceiptsReceiptIdResultsRoute
}

const AppReceiptsRouteRouteChildren: AppReceiptsRouteRouteChildren = {
  AppReceiptsHistoryRoute: AppReceiptsHistoryRoute,
  AppReceiptsReceiptIdResultsRoute: AppReceiptsReceiptIdResultsRoute,
}

const AppReceiptsRouteRouteWithChildren =
  AppReceiptsRouteRoute._addFileChildren(AppReceiptsRouteRouteChildren)

interface AppRouteRouteChildren {
  AppReceiptsRouteRoute: typeof AppReceiptsRouteRouteWithChildren
  AppIndexRoute: typeof AppIndexRoute
  AppInventoryProductIdRoute: typeof AppInventoryProductIdRoute
  AppRecipesRecipeIdRoute: typeof AppRecipesRecipeIdRoute
  AppRecipesSuggestionsRoute: typeof AppRecipesSuggestionsRoute
  AppBudgetIndexRoute: typeof AppBudgetIndexRoute
  AppInventoryIndexRoute: typeof AppInventoryIndexRoute
  AppNotificationsIndexRoute: typeof AppNotificationsIndexRoute
  AppProfileIndexRoute: typeof AppProfileIndexRoute
  AppRecipesIndexRoute: typeof AppRecipesIndexRoute
  AppSettingsIndexRoute: typeof AppSettingsIndexRoute
  AppSubscriptionIndexRoute: typeof AppSubscriptionIndexRoute
  AppInventoryAddDriveRoute: typeof AppInventoryAddDriveRoute
  AppInventoryAddManualRoute: typeof AppInventoryAddManualRoute
  AppInventoryAddReceiptRoute: typeof AppInventoryAddReceiptRoute
  AppInventoryAddScanRoute: typeof AppInventoryAddScanRoute
  AppInventoryAddSearchRoute: typeof AppInventoryAddSearchRoute
  AppInventoryAddIndexRoute: typeof AppInventoryAddIndexRoute
  AppSettingsDietRestrictionsIndexRoute: typeof AppSettingsDietRestrictionsIndexRoute
  AppSettingsPersonalInfoIndexRoute: typeof AppSettingsPersonalInfoIndexRoute
  AppSettingsSecurityIndexRoute: typeof AppSettingsSecurityIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppReceiptsRouteRoute: AppReceiptsRouteRouteWithChildren,
  AppIndexRoute: AppIndexRoute,
  AppInventoryProductIdRoute: AppInventoryProductIdRoute,
  AppRecipesRecipeIdRoute: AppRecipesRecipeIdRoute,
  AppRecipesSuggestionsRoute: AppRecipesSuggestionsRoute,
  AppBudgetIndexRoute: AppBudgetIndexRoute,
  AppInventoryIndexRoute: AppInventoryIndexRoute,
  AppNotificationsIndexRoute: AppNotificationsIndexRoute,
  AppProfileIndexRoute: AppProfileIndexRoute,
  AppRecipesIndexRoute: AppRecipesIndexRoute,
  AppSettingsIndexRoute: AppSettingsIndexRoute,
  AppSubscriptionIndexRoute: AppSubscriptionIndexRoute,
  AppInventoryAddDriveRoute: AppInventoryAddDriveRoute,
  AppInventoryAddManualRoute: AppInventoryAddManualRoute,
  AppInventoryAddReceiptRoute: AppInventoryAddReceiptRoute,
  AppInventoryAddScanRoute: AppInventoryAddScanRoute,
  AppInventoryAddSearchRoute: AppInventoryAddSearchRoute,
  AppInventoryAddIndexRoute: AppInventoryAddIndexRoute,
  AppSettingsDietRestrictionsIndexRoute: AppSettingsDietRestrictionsIndexRoute,
  AppSettingsPersonalInfoIndexRoute: AppSettingsPersonalInfoIndexRoute,
  AppSettingsSecurityIndexRoute: AppSettingsSecurityIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  AppRouteRoute: AppRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
