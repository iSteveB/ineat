/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/app/route'
import { Route as ErrorRouteImport } from './routes/_error/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as AppIndexImport } from './routes/app/index'
import { Route as ErrorNotFoundImport } from './routes/_error/notFound'
import { Route as ErrorErrorImport } from './routes/_error/error'
import { Route as AuthRegisterImport } from './routes/_auth/register'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordImport } from './routes/_auth/forgot-password'
import { Route as AuthCallbackImport } from './routes/_auth/callback'
import { Route as AppSettingsIndexImport } from './routes/app/settings/index'
import { Route as AppRecipesIndexImport } from './routes/app/recipes/index'
import { Route as AppProfileIndexImport } from './routes/app/profile/index'
import { Route as AppNotificationsIndexImport } from './routes/app/notifications/index'
import { Route as AppInventoryIndexImport } from './routes/app/inventory/index'
import { Route as AppBudgetIndexImport } from './routes/app/budget/index'
import { Route as AppRecipesSuggestionsImport } from './routes/app/recipes/suggestions'
import { Route as AppRecipesRecipeIdImport } from './routes/app/recipes/$recipeId'
import { Route as AppInventoryScanProductImport } from './routes/app/inventory/scan-product'
import { Route as AppInventoryImportProductImport } from './routes/app/inventory/import-product'
import { Route as AppInventoryCreateProductImport } from './routes/app/inventory/create-product'
import { Route as AppInventoryAddProductImport } from './routes/app/inventory/add-product'
import { Route as AppInventoryAddManualImport } from './routes/app/inventory/add-manual'
import { Route as AppInventoryProductIdImport } from './routes/app/inventory/$productId'
import { Route as AppSettingsSecurityIndexImport } from './routes/app/settings/security/index'
import { Route as AppSettingsPersonalInfoIndexImport } from './routes/app/settings/personal-info/index'
import { Route as AppSettingsDietRestrictionsIndexImport } from './routes/app/settings/diet-restrictions/index'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const ErrorRouteRoute = ErrorRouteImport.update({
  id: '/_error',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const ErrorNotFoundRoute = ErrorNotFoundImport.update({
  id: '/notFound',
  path: '/notFound',
  getParentRoute: () => ErrorRouteRoute,
} as any)

const ErrorErrorRoute = ErrorErrorImport.update({
  id: '/error',
  path: '/error',
  getParentRoute: () => ErrorRouteRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthCallbackRoute = AuthCallbackImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AppSettingsIndexRoute = AppSettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppRecipesIndexRoute = AppRecipesIndexImport.update({
  id: '/recipes/',
  path: '/recipes/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppProfileIndexRoute = AppProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppNotificationsIndexRoute = AppNotificationsIndexImport.update({
  id: '/notifications/',
  path: '/notifications/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppInventoryIndexRoute = AppInventoryIndexImport.update({
  id: '/inventory/',
  path: '/inventory/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppBudgetIndexRoute = AppBudgetIndexImport.update({
  id: '/budget/',
  path: '/budget/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppRecipesSuggestionsRoute = AppRecipesSuggestionsImport.update({
  id: '/recipes/suggestions',
  path: '/recipes/suggestions',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppRecipesRecipeIdRoute = AppRecipesRecipeIdImport.update({
  id: '/recipes/$recipeId',
  path: '/recipes/$recipeId',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppInventoryScanProductRoute = AppInventoryScanProductImport.update({
  id: '/inventory/scan-product',
  path: '/inventory/scan-product',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppInventoryImportProductRoute = AppInventoryImportProductImport.update({
  id: '/inventory/import-product',
  path: '/inventory/import-product',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppInventoryCreateProductRoute = AppInventoryCreateProductImport.update({
  id: '/inventory/create-product',
  path: '/inventory/create-product',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppInventoryAddProductRoute = AppInventoryAddProductImport.update({
  id: '/inventory/add-product',
  path: '/inventory/add-product',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppInventoryAddManualRoute = AppInventoryAddManualImport.update({
  id: '/inventory/add-manual',
  path: '/inventory/add-manual',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppInventoryProductIdRoute = AppInventoryProductIdImport.update({
  id: '/inventory/$productId',
  path: '/inventory/$productId',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppSettingsSecurityIndexRoute = AppSettingsSecurityIndexImport.update({
  id: '/settings/security/',
  path: '/settings/security/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppSettingsPersonalInfoIndexRoute =
  AppSettingsPersonalInfoIndexImport.update({
    id: '/settings/personal-info/',
    path: '/settings/personal-info/',
    getParentRoute: () => AppRouteRoute,
  } as any)

const AppSettingsDietRestrictionsIndexRoute =
  AppSettingsDietRestrictionsIndexImport.update({
    id: '/settings/diet-restrictions/',
    path: '/settings/diet-restrictions/',
    getParentRoute: () => AppRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/_error': {
      id: '/_error'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ErrorRouteImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/callback': {
      id: '/_auth/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof AuthCallbackImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthRouteImport
    }
    '/_error/error': {
      id: '/_error/error'
      path: '/error'
      fullPath: '/error'
      preLoaderRoute: typeof ErrorErrorImport
      parentRoute: typeof ErrorRouteImport
    }
    '/_error/notFound': {
      id: '/_error/notFound'
      path: '/notFound'
      fullPath: '/notFound'
      preLoaderRoute: typeof ErrorNotFoundImport
      parentRoute: typeof ErrorRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/inventory/$productId': {
      id: '/app/inventory/$productId'
      path: '/inventory/$productId'
      fullPath: '/app/inventory/$productId'
      preLoaderRoute: typeof AppInventoryProductIdImport
      parentRoute: typeof AppRouteImport
    }
    '/app/inventory/add-manual': {
      id: '/app/inventory/add-manual'
      path: '/inventory/add-manual'
      fullPath: '/app/inventory/add-manual'
      preLoaderRoute: typeof AppInventoryAddManualImport
      parentRoute: typeof AppRouteImport
    }
    '/app/inventory/add-product': {
      id: '/app/inventory/add-product'
      path: '/inventory/add-product'
      fullPath: '/app/inventory/add-product'
      preLoaderRoute: typeof AppInventoryAddProductImport
      parentRoute: typeof AppRouteImport
    }
    '/app/inventory/create-product': {
      id: '/app/inventory/create-product'
      path: '/inventory/create-product'
      fullPath: '/app/inventory/create-product'
      preLoaderRoute: typeof AppInventoryCreateProductImport
      parentRoute: typeof AppRouteImport
    }
    '/app/inventory/import-product': {
      id: '/app/inventory/import-product'
      path: '/inventory/import-product'
      fullPath: '/app/inventory/import-product'
      preLoaderRoute: typeof AppInventoryImportProductImport
      parentRoute: typeof AppRouteImport
    }
    '/app/inventory/scan-product': {
      id: '/app/inventory/scan-product'
      path: '/inventory/scan-product'
      fullPath: '/app/inventory/scan-product'
      preLoaderRoute: typeof AppInventoryScanProductImport
      parentRoute: typeof AppRouteImport
    }
    '/app/recipes/$recipeId': {
      id: '/app/recipes/$recipeId'
      path: '/recipes/$recipeId'
      fullPath: '/app/recipes/$recipeId'
      preLoaderRoute: typeof AppRecipesRecipeIdImport
      parentRoute: typeof AppRouteImport
    }
    '/app/recipes/suggestions': {
      id: '/app/recipes/suggestions'
      path: '/recipes/suggestions'
      fullPath: '/app/recipes/suggestions'
      preLoaderRoute: typeof AppRecipesSuggestionsImport
      parentRoute: typeof AppRouteImport
    }
    '/app/budget/': {
      id: '/app/budget/'
      path: '/budget'
      fullPath: '/app/budget'
      preLoaderRoute: typeof AppBudgetIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/inventory/': {
      id: '/app/inventory/'
      path: '/inventory'
      fullPath: '/app/inventory'
      preLoaderRoute: typeof AppInventoryIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/notifications/': {
      id: '/app/notifications/'
      path: '/notifications'
      fullPath: '/app/notifications'
      preLoaderRoute: typeof AppNotificationsIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/profile/': {
      id: '/app/profile/'
      path: '/profile'
      fullPath: '/app/profile'
      preLoaderRoute: typeof AppProfileIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/recipes/': {
      id: '/app/recipes/'
      path: '/recipes'
      fullPath: '/app/recipes'
      preLoaderRoute: typeof AppRecipesIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/settings/': {
      id: '/app/settings/'
      path: '/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AppSettingsIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/settings/diet-restrictions/': {
      id: '/app/settings/diet-restrictions/'
      path: '/settings/diet-restrictions'
      fullPath: '/app/settings/diet-restrictions'
      preLoaderRoute: typeof AppSettingsDietRestrictionsIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/settings/personal-info/': {
      id: '/app/settings/personal-info/'
      path: '/settings/personal-info'
      fullPath: '/app/settings/personal-info'
      preLoaderRoute: typeof AppSettingsPersonalInfoIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/settings/security/': {
      id: '/app/settings/security/'
      path: '/settings/security'
      fullPath: '/app/settings/security'
      preLoaderRoute: typeof AppSettingsSecurityIndexImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthCallbackRoute: typeof AuthCallbackRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthCallbackRoute: AuthCallbackRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface ErrorRouteRouteChildren {
  ErrorErrorRoute: typeof ErrorErrorRoute
  ErrorNotFoundRoute: typeof ErrorNotFoundRoute
}

const ErrorRouteRouteChildren: ErrorRouteRouteChildren = {
  ErrorErrorRoute: ErrorErrorRoute,
  ErrorNotFoundRoute: ErrorNotFoundRoute,
}

const ErrorRouteRouteWithChildren = ErrorRouteRoute._addFileChildren(
  ErrorRouteRouteChildren,
)

interface AppRouteRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppInventoryProductIdRoute: typeof AppInventoryProductIdRoute
  AppInventoryAddManualRoute: typeof AppInventoryAddManualRoute
  AppInventoryAddProductRoute: typeof AppInventoryAddProductRoute
  AppInventoryCreateProductRoute: typeof AppInventoryCreateProductRoute
  AppInventoryImportProductRoute: typeof AppInventoryImportProductRoute
  AppInventoryScanProductRoute: typeof AppInventoryScanProductRoute
  AppRecipesRecipeIdRoute: typeof AppRecipesRecipeIdRoute
  AppRecipesSuggestionsRoute: typeof AppRecipesSuggestionsRoute
  AppBudgetIndexRoute: typeof AppBudgetIndexRoute
  AppInventoryIndexRoute: typeof AppInventoryIndexRoute
  AppNotificationsIndexRoute: typeof AppNotificationsIndexRoute
  AppProfileIndexRoute: typeof AppProfileIndexRoute
  AppRecipesIndexRoute: typeof AppRecipesIndexRoute
  AppSettingsIndexRoute: typeof AppSettingsIndexRoute
  AppSettingsDietRestrictionsIndexRoute: typeof AppSettingsDietRestrictionsIndexRoute
  AppSettingsPersonalInfoIndexRoute: typeof AppSettingsPersonalInfoIndexRoute
  AppSettingsSecurityIndexRoute: typeof AppSettingsSecurityIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppInventoryProductIdRoute: AppInventoryProductIdRoute,
  AppInventoryAddManualRoute: AppInventoryAddManualRoute,
  AppInventoryAddProductRoute: AppInventoryAddProductRoute,
  AppInventoryCreateProductRoute: AppInventoryCreateProductRoute,
  AppInventoryImportProductRoute: AppInventoryImportProductRoute,
  AppInventoryScanProductRoute: AppInventoryScanProductRoute,
  AppRecipesRecipeIdRoute: AppRecipesRecipeIdRoute,
  AppRecipesSuggestionsRoute: AppRecipesSuggestionsRoute,
  AppBudgetIndexRoute: AppBudgetIndexRoute,
  AppInventoryIndexRoute: AppInventoryIndexRoute,
  AppNotificationsIndexRoute: AppNotificationsIndexRoute,
  AppProfileIndexRoute: AppProfileIndexRoute,
  AppRecipesIndexRoute: AppRecipesIndexRoute,
  AppSettingsIndexRoute: AppSettingsIndexRoute,
  AppSettingsDietRestrictionsIndexRoute: AppSettingsDietRestrictionsIndexRoute,
  AppSettingsPersonalInfoIndexRoute: AppSettingsPersonalInfoIndexRoute,
  AppSettingsSecurityIndexRoute: AppSettingsSecurityIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof ErrorRouteRouteWithChildren
  '/app': typeof AppRouteRouteWithChildren
  '/callback': typeof AuthCallbackRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/error': typeof ErrorErrorRoute
  '/notFound': typeof ErrorNotFoundRoute
  '/app/': typeof AppIndexRoute
  '/app/inventory/$productId': typeof AppInventoryProductIdRoute
  '/app/inventory/add-manual': typeof AppInventoryAddManualRoute
  '/app/inventory/add-product': typeof AppInventoryAddProductRoute
  '/app/inventory/create-product': typeof AppInventoryCreateProductRoute
  '/app/inventory/import-product': typeof AppInventoryImportProductRoute
  '/app/inventory/scan-product': typeof AppInventoryScanProductRoute
  '/app/recipes/$recipeId': typeof AppRecipesRecipeIdRoute
  '/app/recipes/suggestions': typeof AppRecipesSuggestionsRoute
  '/app/budget': typeof AppBudgetIndexRoute
  '/app/inventory': typeof AppInventoryIndexRoute
  '/app/notifications': typeof AppNotificationsIndexRoute
  '/app/profile': typeof AppProfileIndexRoute
  '/app/recipes': typeof AppRecipesIndexRoute
  '/app/settings': typeof AppSettingsIndexRoute
  '/app/settings/diet-restrictions': typeof AppSettingsDietRestrictionsIndexRoute
  '/app/settings/personal-info': typeof AppSettingsPersonalInfoIndexRoute
  '/app/settings/security': typeof AppSettingsSecurityIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof ErrorRouteRouteWithChildren
  '/callback': typeof AuthCallbackRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/error': typeof ErrorErrorRoute
  '/notFound': typeof ErrorNotFoundRoute
  '/app': typeof AppIndexRoute
  '/app/inventory/$productId': typeof AppInventoryProductIdRoute
  '/app/inventory/add-manual': typeof AppInventoryAddManualRoute
  '/app/inventory/add-product': typeof AppInventoryAddProductRoute
  '/app/inventory/create-product': typeof AppInventoryCreateProductRoute
  '/app/inventory/import-product': typeof AppInventoryImportProductRoute
  '/app/inventory/scan-product': typeof AppInventoryScanProductRoute
  '/app/recipes/$recipeId': typeof AppRecipesRecipeIdRoute
  '/app/recipes/suggestions': typeof AppRecipesSuggestionsRoute
  '/app/budget': typeof AppBudgetIndexRoute
  '/app/inventory': typeof AppInventoryIndexRoute
  '/app/notifications': typeof AppNotificationsIndexRoute
  '/app/profile': typeof AppProfileIndexRoute
  '/app/recipes': typeof AppRecipesIndexRoute
  '/app/settings': typeof AppSettingsIndexRoute
  '/app/settings/diet-restrictions': typeof AppSettingsDietRestrictionsIndexRoute
  '/app/settings/personal-info': typeof AppSettingsPersonalInfoIndexRoute
  '/app/settings/security': typeof AppSettingsSecurityIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_error': typeof ErrorRouteRouteWithChildren
  '/app': typeof AppRouteRouteWithChildren
  '/_auth/callback': typeof AuthCallbackRoute
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_error/error': typeof ErrorErrorRoute
  '/_error/notFound': typeof ErrorNotFoundRoute
  '/app/': typeof AppIndexRoute
  '/app/inventory/$productId': typeof AppInventoryProductIdRoute
  '/app/inventory/add-manual': typeof AppInventoryAddManualRoute
  '/app/inventory/add-product': typeof AppInventoryAddProductRoute
  '/app/inventory/create-product': typeof AppInventoryCreateProductRoute
  '/app/inventory/import-product': typeof AppInventoryImportProductRoute
  '/app/inventory/scan-product': typeof AppInventoryScanProductRoute
  '/app/recipes/$recipeId': typeof AppRecipesRecipeIdRoute
  '/app/recipes/suggestions': typeof AppRecipesSuggestionsRoute
  '/app/budget/': typeof AppBudgetIndexRoute
  '/app/inventory/': typeof AppInventoryIndexRoute
  '/app/notifications/': typeof AppNotificationsIndexRoute
  '/app/profile/': typeof AppProfileIndexRoute
  '/app/recipes/': typeof AppRecipesIndexRoute
  '/app/settings/': typeof AppSettingsIndexRoute
  '/app/settings/diet-restrictions/': typeof AppSettingsDietRestrictionsIndexRoute
  '/app/settings/personal-info/': typeof AppSettingsPersonalInfoIndexRoute
  '/app/settings/security/': typeof AppSettingsSecurityIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/app'
    | '/callback'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/error'
    | '/notFound'
    | '/app/'
    | '/app/inventory/$productId'
    | '/app/inventory/add-manual'
    | '/app/inventory/add-product'
    | '/app/inventory/create-product'
    | '/app/inventory/import-product'
    | '/app/inventory/scan-product'
    | '/app/recipes/$recipeId'
    | '/app/recipes/suggestions'
    | '/app/budget'
    | '/app/inventory'
    | '/app/notifications'
    | '/app/profile'
    | '/app/recipes'
    | '/app/settings'
    | '/app/settings/diet-restrictions'
    | '/app/settings/personal-info'
    | '/app/settings/security'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/callback'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/error'
    | '/notFound'
    | '/app'
    | '/app/inventory/$productId'
    | '/app/inventory/add-manual'
    | '/app/inventory/add-product'
    | '/app/inventory/create-product'
    | '/app/inventory/import-product'
    | '/app/inventory/scan-product'
    | '/app/recipes/$recipeId'
    | '/app/recipes/suggestions'
    | '/app/budget'
    | '/app/inventory'
    | '/app/notifications'
    | '/app/profile'
    | '/app/recipes'
    | '/app/settings'
    | '/app/settings/diet-restrictions'
    | '/app/settings/personal-info'
    | '/app/settings/security'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_error'
    | '/app'
    | '/_auth/callback'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/register'
    | '/_error/error'
    | '/_error/notFound'
    | '/app/'
    | '/app/inventory/$productId'
    | '/app/inventory/add-manual'
    | '/app/inventory/add-product'
    | '/app/inventory/create-product'
    | '/app/inventory/import-product'
    | '/app/inventory/scan-product'
    | '/app/recipes/$recipeId'
    | '/app/recipes/suggestions'
    | '/app/budget/'
    | '/app/inventory/'
    | '/app/notifications/'
    | '/app/profile/'
    | '/app/recipes/'
    | '/app/settings/'
    | '/app/settings/diet-restrictions/'
    | '/app/settings/personal-info/'
    | '/app/settings/security/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  ErrorRouteRoute: typeof ErrorRouteRouteWithChildren
  AppRouteRoute: typeof AppRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  ErrorRouteRoute: ErrorRouteRouteWithChildren,
  AppRouteRoute: AppRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_error",
        "/app"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/callback",
        "/_auth/forgot-password",
        "/_auth/login",
        "/_auth/register"
      ]
    },
    "/_error": {
      "filePath": "_error/route.tsx",
      "children": [
        "/_error/error",
        "/_error/notFound"
      ]
    },
    "/app": {
      "filePath": "app/route.tsx",
      "children": [
        "/app/",
        "/app/inventory/$productId",
        "/app/inventory/add-manual",
        "/app/inventory/add-product",
        "/app/inventory/create-product",
        "/app/inventory/import-product",
        "/app/inventory/scan-product",
        "/app/recipes/$recipeId",
        "/app/recipes/suggestions",
        "/app/budget/",
        "/app/inventory/",
        "/app/notifications/",
        "/app/profile/",
        "/app/recipes/",
        "/app/settings/",
        "/app/settings/diet-restrictions/",
        "/app/settings/personal-info/",
        "/app/settings/security/"
      ]
    },
    "/_auth/callback": {
      "filePath": "_auth/callback.tsx",
      "parent": "/_auth"
    },
    "/_auth/forgot-password": {
      "filePath": "_auth/forgot-password.tsx",
      "parent": "/_auth"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/register": {
      "filePath": "_auth/register.tsx",
      "parent": "/_auth"
    },
    "/_error/error": {
      "filePath": "_error/error.tsx",
      "parent": "/_error"
    },
    "/_error/notFound": {
      "filePath": "_error/notFound.tsx",
      "parent": "/_error"
    },
    "/app/": {
      "filePath": "app/index.tsx",
      "parent": "/app"
    },
    "/app/inventory/$productId": {
      "filePath": "app/inventory/$productId.tsx",
      "parent": "/app"
    },
    "/app/inventory/add-manual": {
      "filePath": "app/inventory/add-manual.tsx",
      "parent": "/app"
    },
    "/app/inventory/add-product": {
      "filePath": "app/inventory/add-product.tsx",
      "parent": "/app"
    },
    "/app/inventory/create-product": {
      "filePath": "app/inventory/create-product.tsx",
      "parent": "/app"
    },
    "/app/inventory/import-product": {
      "filePath": "app/inventory/import-product.tsx",
      "parent": "/app"
    },
    "/app/inventory/scan-product": {
      "filePath": "app/inventory/scan-product.tsx",
      "parent": "/app"
    },
    "/app/recipes/$recipeId": {
      "filePath": "app/recipes/$recipeId.tsx",
      "parent": "/app"
    },
    "/app/recipes/suggestions": {
      "filePath": "app/recipes/suggestions.tsx",
      "parent": "/app"
    },
    "/app/budget/": {
      "filePath": "app/budget/index.tsx",
      "parent": "/app"
    },
    "/app/inventory/": {
      "filePath": "app/inventory/index.tsx",
      "parent": "/app"
    },
    "/app/notifications/": {
      "filePath": "app/notifications/index.tsx",
      "parent": "/app"
    },
    "/app/profile/": {
      "filePath": "app/profile/index.tsx",
      "parent": "/app"
    },
    "/app/recipes/": {
      "filePath": "app/recipes/index.tsx",
      "parent": "/app"
    },
    "/app/settings/": {
      "filePath": "app/settings/index.tsx",
      "parent": "/app"
    },
    "/app/settings/diet-restrictions/": {
      "filePath": "app/settings/diet-restrictions/index.tsx",
      "parent": "/app"
    },
    "/app/settings/personal-info/": {
      "filePath": "app/settings/personal-info/index.tsx",
      "parent": "/app"
    },
    "/app/settings/security/": {
      "filePath": "app/settings/security/index.tsx",
      "parent": "/app"
    }
  }
}
ROUTE_MANIFEST_END */
